{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/rrs/Documents/vscode/BeTheHero/mobile/src/pages/Incidents/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Feather, AntDesign } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport api from \"../../services/api\";\nimport logoImg from \"../../assets/logo.png\";\nimport styles from \"./styles\";\nexport default function Incidents() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      id = _useState10[0],\n      setID = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var navigation = useNavigation();\n\n  function loadStorage() {\n    var ongid, ongname;\n    return _regeneratorRuntime.async(function loadStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('ongID'));\n\n          case 3:\n            ongid = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('ongName'));\n\n          case 6:\n            ongname = _context.sent;\n            console.log('ongid: ' + ongid);\n            console.log('ongname: ' + ongname);\n\n            if (ongid && ongname !== null) {\n              setID(ongid);\n              setName(ongname);\n            }\n\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            alert('erro', _context.t0);\n\n          case 15:\n            console.log('id dentro do loadStorage: ' + id), loadIncidents();\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  }\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  function navigateToIncidentCreate() {\n    navigation.navigate('IncidentCreate');\n  }\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!loading) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.lenght === total)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            _context2.prev = 4;\n            console.log('id dentro do loadincidents: ' + id);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(api.get('profiles', {\n              headers: {\n                Authorization: id\n              },\n              params: {\n                page: page\n              }\n            }));\n\n          case 8:\n            response = _context2.sent;\n            setIncidents([].concat(_toConsumableArray(incidents), _toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n            _context2.next = 18;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](4);\n            alert(_context2.t0);\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[4, 15]], Promise);\n  }\n\n  useEffect(function () {\n    navigation.addListener('focus', function () {\n      loadStorage();\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 20\n    }\n  }, total, \" casos\"))), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Bem-Vinda, \", name, \", \", id), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Escolha um dos casos abaixo e salve o dia.\"), React.createElement(FlatList, {\n    data: incidents,\n    style: styles.incidentList,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    showsVerticalScrollIndicator: false,\n    onEndReached: loadIncidents,\n    onEndReachedThreshold: 0.5,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, \"CASO:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, \"VALOR:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: function onPress() {\n      return navigateToIncidentCreate();\n    },\n    style: styles.touchFloatButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(AntDesign, {\n    style: styles.FloatingButtonStyle,\n    name: \"pluscircle\",\n    size: 50,\n    color: \"#E02041\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/rrs/Documents/vscode/BeTheHero/mobile/src/pages/Incidents/index.js"],"names":["React","useState","useEffect","Feather","AntDesign","useNavigation","api","logoImg","styles","Incidents","incidents","setIncidents","total","setTotal","page","setPage","loading","setLoading","id","setID","name","setName","navigation","loadStorage","AsyncStorage","getItem","ongid","ongname","console","log","alert","loadIncidents","navigateToDetail","incident","navigate","navigateToIncidentCreate","lenght","get","headers","Authorization","params","response","data","addListener","container","header","headerText","headerTextBold","title","description","incidentList","String","item","incidentProperty","incidentValue","Intl","NumberFormat","style","currency","format","value","detailsButton","detailsButtonText","touchFloatButton","FloatingButtonStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Feather, AntDesign } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native'\nimport { View, FlatList, Image, Text, TouchableOpacity, AsyncStorage, Alert } from 'react-native'\n\nimport api from '../../services/api'\n\nimport logoImg from '../../assets/logo.png';\n\nimport styles from './styles';\n\nexport default function Incidents() {\n  const [incidents, setIncidents] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [id, setID] = useState('');\n  const [name, setName] = useState('');\n\n  const navigation = useNavigation();\n\n  async function loadStorage() {\n    \n    try {\n      const ongid = await AsyncStorage.getItem('ongID');\n      const ongname = await AsyncStorage.getItem('ongName');\n      console.log('ongid: ' + ongid)\n      console.log('ongname: ' + ongname)\n      if (ongid && ongname !== null) {\n        setID(ongid);\n        setName(ongname);\n      }\n    } catch (e) {\n      alert('erro', e);\n    }\n    console.log('id dentro do loadStorage: ' + id),\n    loadIncidents();\n}\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', { incident });\n  }\n\n  function navigateToIncidentCreate() {\n    navigation.navigate('IncidentCreate');\n  }\n\n  async function loadIncidents() {\n\n    if (loading) {\n      return;\n    }\n\n    if (total > 0 && incidents.lenght === total) {\n      return;\n    }\n\n    try {\n      console.log('id dentro do loadincidents: ' + id)\n      const response = await api.get('profiles', {\n        headers: {\n          Authorization: id,\n        },\n        params: { page },\n      });\n  \n      setIncidents([ ... incidents, ... response.data]);\n      setTotal(response.headers['x-total-count']);\n      setPage(page +1);\n      setLoading(false);\n\n    } catch (e) {\n      alert(e);\n    }  \n  }\n\n  useEffect(() => {\n    navigation.addListener('focus', () => {\n      loadStorage();\n    });\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Image source={logoImg} />\n        <Text style={styles.headerText}>\n          Total de <Text style={styles.headerTextBold}>{total} casos</Text>\n        </Text>\n      </View>\n\n      <Text style={styles.title}>Bem-Vinda, {name}, {id}</Text>\n      <Text style={styles.description}>Escolha um dos casos abaixo e salve o dia.</Text>\n\n      <FlatList\n        data={incidents}\n        style={styles.incidentList}\n        keyExtractor={incident => String(incident.id)}\n        showsVerticalScrollIndicator={false}\n        onEndReached={loadIncidents}\n        onEndReachedThreshold={0.5}\n        renderItem={({ item: incident }) => (\n          <View style={styles.incident}>\n            <Text style={styles.incidentProperty}>ONG:</Text>\n            <Text style={styles.incidentValue}>{incident.name}</Text>\n\n            <Text style={styles.incidentProperty}>CASO:</Text>\n            <Text style={styles.incidentValue}>{incident.title}</Text>\n\n            <Text style={styles.incidentProperty}>VALOR:</Text>\n            <Text style={styles.incidentValue}>\n              {Intl.NumberFormat('pt-BR', {\n               style: 'currency', \n               currency: 'BRL' \n               }).format(incident.value)}\n            </Text>\n\n            <TouchableOpacity\n              style={styles.detailsButton}\n              onPress={() => navigateToDetail(incident)}\n            >\n            <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\n            <Feather name=\"arrow-right\" size={16} color=\"#E02041\"></Feather>\n            </TouchableOpacity>\n          </View>\n        )}\n      />\n\n      <TouchableOpacity\n        activeOpacity={0.5}\n        onPress={() => navigateToIncidentCreate()}\n        style={styles.touchFloatButton}>\n        <AntDesign style={styles.FloatingButtonStyle} name=\"pluscircle\" size={50} color=\"#E02041\" />\n      </TouchableOpacity>\n    </View>\n  );\n}"]},"metadata":{},"sourceType":"module"}