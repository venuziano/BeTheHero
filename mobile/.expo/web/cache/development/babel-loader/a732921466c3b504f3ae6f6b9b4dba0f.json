{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/rrs/Documents/vscode/BeTheHero/mobile/src/pages/Incidents/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport api from \"../../services/api\";\nimport logoImg from \"../../assets/logo.png\";\nimport styles from \"./styles\";\nexport default function Incidents() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.lenght === total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(api.get('incidents', {\n              params: {\n                page: page\n              }\n            }));\n\n          case 6:\n            response = _context.sent;\n            setIncidents([].concat(_toConsumableArray(incidents), _toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  }, []);\n\n  clickHandler = function clickHandler() {\n    console.log('Floating Button Clicked22');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }\n  }, total, \" casos\"))), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Bem-Vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Escolha um dos casos abaixo e salve o dia.\"), React.createElement(FlatList, {\n    data: incidents,\n    style: styles.incidentList,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    showsVerticalScrollIndicator: false,\n    onEndReached: loadIncidents,\n    onEndReachedThreshold: 0.2,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, \"CASO:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"VALOR:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return console.log('apertei');\n    },\n    style: styles.touchFloatButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/plus_icon.png'\n    },\n    style: styles.FloatingButtonStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/rrs/Documents/vscode/BeTheHero/mobile/src/pages/Incidents/index.js"],"names":["React","useState","useEffect","Feather","useNavigation","api","logoImg","styles","Incidents","incidents","setIncidents","total","setTotal","page","setPage","loading","setLoading","navigation","navigateToDetail","incident","navigate","loadIncidents","lenght","get","params","response","data","headers","clickHandler","console","log","container","header","headerText","headerTextBold","title","description","incidentList","String","id","item","incidentProperty","incidentValue","name","Intl","NumberFormat","style","currency","format","value","detailsButton","detailsButtonText","touchFloatButton","uri","FloatingButtonStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native'\nimport { View, FlatList, Image, Text, TouchableOpacity } from 'react-native'\n\nimport api from '../../services/api'\n\nimport logoImg from '../../assets/logo.png';\n\nimport styles from './styles';\n\nexport default function Incidents() {\n  const [incidents, setIncidents] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const navigation = useNavigation();\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', { incident });\n  }\n\n  async function loadIncidents() {\n    if (loading) {\n      return;\n    }\n\n    if (total > 0 && incidents.lenght === total) {\n      return;\n    }\n\n    const response = await api.get('incidents', {\n      params: { page }\n    });\n\n    setIncidents([ ... incidents, ... response.data]);\n    setTotal(response.headers['x-total-count']);\n    setPage(page +1);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    loadIncidents();\n  }, []);\n\n  clickHandler = () => {\n    //function to handle click on floating Action Button\n    console.log('Floating Button Clicked22');\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Image source={logoImg} />\n        <Text style={styles.headerText}>\n          Total de <Text style={styles.headerTextBold}>{total} casos</Text>\n        </Text>\n      </View>\n\n      <Text style={styles.title}>Bem-Vindo!</Text>\n      <Text style={styles.description}>Escolha um dos casos abaixo e salve o dia.</Text>\n\n      <FlatList\n        data={incidents}\n        style={styles.incidentList}\n        keyExtractor={incident => String(incident.id)}\n        showsVerticalScrollIndicator={false}\n        onEndReached={loadIncidents}\n        onEndReachedThreshold={0.2}\n        renderItem={({ item: incident }) => (\n          <View style={styles.incident}>\n            <Text style={styles.incidentProperty}>ONG:</Text>\n            <Text style={styles.incidentValue}>{incident.name}</Text>\n\n            <Text style={styles.incidentProperty}>CASO:</Text>\n            <Text style={styles.incidentValue}>{incident.title}</Text>\n\n            <Text style={styles.incidentProperty}>VALOR:</Text>\n            <Text style={styles.incidentValue}>\n              {Intl.NumberFormat('pt-BR', {\n               style: 'currency', \n               currency: 'BRL' \n               }).format(incident.value)}\n            </Text>\n            \n            <TouchableOpacity\n              style={styles.detailsButton}\n              onPress={() => navigateToDetail(incident)}\n            >\n            <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\n            <Feather name=\"arrow-right\" size={16} color=\"#E02041\"></Feather>\n            </TouchableOpacity>\n          </View>\n        )}\n      />\n\n      <TouchableOpacity\n        onPress={() => console.log( 'apertei' )}\n        style={styles.touchFloatButton}>\n        <Image\n          //We are making FAB using TouchableOpacity with an image\n          //We are using online image here\n          source={{\n            uri:'https://raw.githubusercontent.com/AboutReact/sampleresource/master/plus_icon.png',\n          }}\n          //You can use you project image Example below\n          //source={require('./images/float-add-icon.png')}\n          style={styles.FloatingButtonStyle}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}"]},"metadata":{},"sourceType":"module"}